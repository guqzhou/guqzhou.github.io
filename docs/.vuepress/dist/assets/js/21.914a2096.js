(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{362:function(s,a,t){"use strict";t.r(a);var r=t(12),e=Object(r.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"js数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js数据类型"}},[s._v("#")]),s._v(" js数据类型")]),s._v(" "),a("h3",{attrs:{id:"基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[s._v("#")]),s._v(" 基本数据类型")]),s._v(" "),a("p",[s._v("弱数据类型的语言，只有我们赋值了才知道什么数据类型")]),s._v(" "),a("h5",{attrs:{id:"number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[s._v("#")]),s._v(" number")]),s._v(" "),a("p",[s._v("正数、整数、小数、负数"),a("br"),s._v("\n算术运算符"),a("br"),s._v("\n% 余数")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" 为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h5",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[s._v("#")]),s._v(" string")]),s._v(" "),a("p",[s._v("单引号或者双引号或者反引号"),a("br"),s._v("\n拼接：数字相加，字符相连")]),s._v(" "),a("p",[s._v("模板字符串")]),s._v(" "),a("h5",{attrs:{id:"boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[s._v("#")]),s._v(" boolean")]),s._v(" "),a("h5",{attrs:{id:"undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[s._v("#")]),s._v(" undefined")]),s._v(" "),a("p",[s._v("声明一个变量未给值")]),s._v(" "),a("h5",{attrs:{id:"null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[s._v("#")]),s._v(" null")]),s._v(" "),a("p",[s._v("空值，无，未知"),a("br"),s._v("\n如果一个变量确定要放对象但还没准备好，可以赋值为null")]),s._v(" "),a("blockquote",[a("p",[s._v("undefiend 和 null 的区别")])]),s._v(" "),a("ol",[a("li",[s._v("undefiend 表示定义了，却没赋值，null表示赋值了却是空值")]),s._v(" "),a("li",[s._v("null 检测数据类型的时候为object\n如果")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"引用数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[s._v("#")]),s._v(" 引用数据类型")]),s._v(" "),a("h3",{attrs:{id:"检测数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检测数据类型"}},[s._v("#")]),s._v(" 检测数据类型")]),s._v(" "),a("h4",{attrs:{id:"typeof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeof"}},[s._v("#")]),s._v(" typeof")]),s._v(" "),a("ol",[a("li",[s._v("作为运算符：typeOf X")]),s._v(" "),a("li",[s._v("函数：typeof(x)")])]),s._v(" "),a("h3",{attrs:{id:"类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[s._v("#")]),s._v(" 类型转换")]),s._v(" "),a("h4",{attrs:{id:"隐式转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[s._v("#")]),s._v(" 隐式转换")]),s._v(" "),a("ol",[a("li",[s._v("'+'号两边有一个是字符串，都会把它转成字符串")]),s._v(" "),a("li",[s._v("除了'+' - * /等都会把数据类型转换为数字类型")]),s._v(" "),a("li",[s._v("+号解析为数字类型 + '23' = 23")])]),s._v(" "),a("h3",{attrs:{id:"自增"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自增"}},[s._v("#")]),s._v(" 自增")]),s._v(" "),a("p",[s._v("let i = 1\n++i + 2 = 3\ni++ + 2 = 5")])])}),[],!1,null,null,null);a.default=e.exports}}]);