(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{359:function(t,a,v){"use strict";v.r(a);var _=v(12),r=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("在聊这个概念的时候我们首先要弄清楚以下问题")]),t._v(" "),a("h3",{attrs:{id:"浏览器是如何渲染页面的？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是如何渲染页面的？"}},[t._v("#")]),t._v(" 浏览器是如何渲染页面的？")]),t._v(" "),a("ol",[a("li",[t._v("解析（parser）HTML，生成DOM树（DOM Tree）。")]),t._v(" "),a("li",[t._v("同时解析（parser）CSS,生成样式规则（style rules）。")]),t._v(" "),a("li",[t._v("根据生成的DOM树和CSS样式规则生成渲染树")]),t._v(" "),a("li",[t._v("进行布局Layout（回流和重排）：根据渲染树，得到节点的位置及大小（几何信息）")]),t._v(" "),a("li",[t._v("进行绘制Painting（重绘）：根据计算和获取的几何信息进行整个页面的绘制")]),t._v(" "),a("li",[t._v("Dispaly：显示在页面上")])]),t._v(" "),a("p",[t._v("根据浏览器的渲染规则引出重绘和重排")]),t._v(" "),a("h2",{attrs:{id:"回流layot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回流layot"}},[t._v("#")]),t._v(" 回流Layot")]),t._v(" "),a("p",[t._v("当渲染树中部分或者全部元素尺寸、结构、布局发生变化的时候，浏览器就会重新渲染部分或者全部的html文档")]),t._v(" "),a("ul",[a("li",[t._v("页面的首次刷新")]),t._v(" "),a("li",[t._v("浏览器窗口变化")]),t._v(" "),a("li",[t._v("元素的大小和位置变化")]),t._v(" "),a("li",[t._v("改变字体大小")]),t._v(" "),a("li",[t._v("内容变化")]),t._v(" "),a("li",[t._v("激活css伪类")]),t._v(" "),a("li",[t._v("脚本操作dom（添加删除元素）")])]),t._v(" "),a("h2",{attrs:{id:"重绘painting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘painting"}},[t._v("#")]),t._v(" 重绘Painting")]),t._v(" "),a("p",[t._v("由于节点（元素）的样式发生改变不影响文档流中的位置和文档布局，比如：color、background-color、outline等待")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("重绘不一定引起回流，而回流一定会引起重绘")])])}),[],!1,null,null,null);a.default=r.exports}}]);